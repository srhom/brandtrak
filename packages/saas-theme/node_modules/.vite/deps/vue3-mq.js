import {
  require_vue
} from "./chunk-XYP2Q4NR.js";
import "./chunk-SHFXRWP4.js";
import {
  __commonJS
} from "./chunk-FE6Y45BL.js";

// node_modules/vue3-mq/dist/vue3-mq.js
var require_vue3_mq = __commonJS({
  "node_modules/vue3-mq/dist/vue3-mq.js"(exports) {
    Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
    var s = require_vue();
    var b = s.ref([]);
    var O = s.ref(null);
    var I = s.ref(null);
    var E = s.ref(null);
    var L = s.ref(null);
    var l = s.reactive({ current: "" });
    var M = [];
    var C = s.ref(false);
    var d = s.readonly(b);
    var Y = s.readonly(O);
    var Z = s.readonly(I);
    var F = s.readonly(E);
    var G = s.readonly(L);
    var c = s.readonly(l);
    var J = (e) => {
      b.value = e;
    };
    var H = (e) => {
      O.value = e;
    };
    var U = (e) => {
      I.value = e;
    };
    var W = (e) => {
      E.value = e;
    };
    var X = (e) => {
      L.value = e;
    };
    var _ = (e = Y.value) => {
      l.current = e;
      const n = d.value.findIndex((t) => t.name === e), o = d.value.map((t) => t.name);
      for (let t = 0; t < o.length; t++) {
        if (t > 0 && t < o.length - 1) {
          const r = o[t] + "Minus", a = o[t] + "Plus";
          l[r] = n <= t, l[a] = n >= t;
        }
        l[o[t]] = o[t] === e;
      }
    };
    var ee = () => {
      const e = Object.keys(l);
      for (let n of e)
        delete l[n];
      _(), j(), P(), A();
    };
    var j = (e = Z.value) => {
      l.orientation = e, l.isLandscape = e === "landscape", l.isPortrait = e === "portrait";
    };
    var P = (e = F.value || "light") => {
      l.theme = e, l.isDark = e === "dark", l.isLight = e === "light";
    };
    var A = (e = G.value || "no-preference") => {
      l.motionPreference = e, l.isMotion = e === "no-preference", l.isInert = e === "reduce";
    };
    function te() {
      for (; M.length > 0; ) {
        const e = M.shift();
        if (e && typeof e == "object") {
          const { mql: n, cb: o } = e;
          n.addEventListener && typeof n.addEventListener == "function" ? n.removeEventListener("change", o) : n.removeListener(o);
        }
      }
    }
    function ne() {
      return d.value.reduce((n, o, t, r) => {
        const a = `(min-width: ${o.min}px)`, i = t < r.length - 1 ? `(max-width: ${r[t + 1].min - 1}px)` : null, u = a + (i ? " and " + i : "");
        return Object.assign(n, { [o.name]: u });
      }, {});
    }
    function h(e, n) {
      if (typeof window > "u" || !window.matchMedia)
        return false;
      if (typeof window < "u" && !window.matchMedia)
        return console.error("Vue3 Mq: No MatchMedia support detected in this browser. Responsive breakpoints not available."), false;
      {
        C.value = true;
        const o = window.matchMedia(e), t = ({ matches: a }) => {
          a && n();
        };
        M.push({ mql: o, cb: t }), o.addEventListener && typeof o.addEventListener == "function" ? o.addEventListener("change", t) : o.addListener(t), t(o);
      }
    }
    var f = (e) => d.value.some((n) => n.name === e);
    var B = (e, n) => {
      const o = n.value.map((t) => t.name);
      if (e) {
        if (Array.isArray(e))
          return e.filter((t) => f(t));
        if (typeof e == "string" && /\w+\+$/.test(e)) {
          if (e = e.replace(/\+$/, ""), f(e) === false)
            return console.error(`Vue3 Mq: ${e} is not a valid breakpoint key. Invalid range.`), o;
          const t = n.value.findIndex((r) => r.name === e);
          return n.value.slice(t).map((r) => r.name);
        } else if (typeof e == "string" && /\w+-$/.test(e)) {
          if (e = e.replace(/-$/, ""), f(e) === false)
            return console.error(`Vue3 Mq: ${e} is not a valid breakpoint key. Invalid range.`), o;
          const t = n.value.findIndex((r) => r.name === e);
          return n.value.slice(0, t + 1).map((r) => r.name);
        } else if (typeof e == "string" && /^\w+-\w+$/.test(e)) {
          const [t, r] = e.split("-");
          if (f(t) === false)
            return console.error(`Vue3 Mq: ${t} is not a valid breakpoint key. Invalid range.`), o;
          if (f(r) === false)
            return console.error(`Vue3 Mq: ${r} is not a valid breakpoint key. Invalid range.`), o;
          const a = n.value.findIndex((u) => u.name === t), i = n.value.findIndex((u) => u.name === r);
          return n.value.slice(a, i + 1).map((u) => u.name);
        } else
          return typeof e == "string" && f(e) === true ? [e] : o;
      } else
        return o;
    };
    var S = (e, n) => {
      const o = [];
      return !e && !n ? ["landscape", "portrait"] : (e && o.push("landscape"), n && o.push("portrait"), o);
    };
    var V = (e, n) => {
      const o = [];
      return !n && !e ? ["light", "dark"] : (n && o.push("light"), e && o.push("dark"), o);
    };
    var $ = (e, n) => {
      const o = [];
      return !e && !n ? ["reduce", "no-preference"] : (e && o.push("reduce"), n && o.push("no-preference"), o);
    };
    var oe = { xs: 0, sm: 576, md: 768, lg: 992, xl: 1200, xxl: 1400 };
    var re = { xs: 0, sm: 576, md: 768, lg: 992, xl: 1200 };
    var ae = { xs: 0, sm: 768, md: 992, lg: 1200 };
    var se = { xs: 0, sm: 600, md: 960, lg: 1264, xl: 1904 };
    var ie = { xs: 0, sm: 640, md: 768, lg: 1024, xl: 1280, xxl: 1536 };
    var le = { phone: 0, tablet: 768, laptop: 1370, desktop: 1906 };
    var ue = { mobile: 0, small: 600, medium: 782, large: 960, xlarge: 1080, wide: 1280, huge: 1440 };
    var k = Object.freeze(Object.defineProperty({ __proto__: null, bootstrap5: oe, bootstrap4: re, bootstrap3: ae, vuetify: se, tailwind: ie, devices: le, wordpress: ue }, Symbol.toStringTag, { value: "Module" }));
    var ce = (e) => {
      if (typeof e == "string" && k[e])
        return k[e];
      {
        const n = Object.keys(k);
        return console.error(`Vue3 Mq: "${e}" is not a valid preset. Available options are: ${n.join(", ")}`), false;
      }
    };
    var de = (e) => ["landscape", "portrait"].includes(e) === false ? (console.error(`Vue3 Mq: "${e}" is not a valid default orientation. Reverting to unset value.`), null) : e;
    var fe = (e = null) => ["dark", "light"].includes(e) === false && e !== null ? (console.error(`Vue3 Mq: "${e}" is not a valid default theme. Reverting to unset value.`), null) : e;
    var pe = (e = null) => ["no-preference", "reduce"].includes(e) === false && e !== null ? (console.error(`Vue3 Mq: "${e}" is not a valid default motion preference. Reverting to unset value.`), null) : e;
    var R = (e) => {
      if (!e || typeof e != "object")
        return false;
      const n = [];
      for (let r in e) {
        const a = parseFloat(e[r]);
        if (!r || typeof r != "string") {
          console.warn(`Vue3 Mq: Invalid or missing breakpoint key (${JSON.stringify(r)}). Skipping.`);
          continue;
        } else if (/^[^a-z]/i.test(r) || /[^a-zA-Z0-9_]/.test(r)) {
          console.warn(`Vue3 Mq: "${r}" is an invalid breakpoint key. Breakpoint keys must start with a letter and contain only alphanumeric characters and underscores. Skipping.`);
          continue;
        } else if (!a && a !== 0 || isNaN(a) || a < 0) {
          console.warn(`Vue3 Mq: "${r}: ${e[r]}" is not a valid breakpoint. Breakpoints should be a number of zero or above. Skipping.`);
          continue;
        }
        n.push({ name: r, min: a });
      }
      return n.some((r) => r.min === 0) || console.warn("Vue3 Mq: You have not declared a breakpoint with a minimum value of 0. There may be screen sizes to which Vue3Mq does not respond."), new Set(n.map((r) => r.min)).size < n.length && console.warn("Vue3 Mq: Your breakpoint configuration contains duplicate values. Behaviour may be unpredictable."), n.length === 0 ? false : n.sort((r, a) => r.min - a.min);
    };
    var me = (e) => {
      const n = e.split(":"), o = {};
      for (let t of n)
        /\D/.test(t) !== false && (["landscape", "portrait"].includes(t) ? o.slotOrientation = t : ["light", "dark"].includes(t) ? o.slotTheme = t : ["inert", "motion"].includes(t) ? o.slotMotion = t : o.slotBp = t);
      return o;
    };
    var ve = { name: "fade", mode: "out-in" };
    var he = { name: "MqResponsive", props: { target: [String, Array], landscape: { type: Boolean, default: false }, portrait: { type: Boolean, default: false }, dark: { type: Boolean, default: false }, light: { type: Boolean, default: false }, inert: { type: Boolean, default: false }, motion: { type: Boolean, default: false }, tag: { type: String, default: "div" }, listTag: { type: String, default: "div" }, group: { type: Boolean, default: false } }, setup(e, { attrs: n, emit: o, slots: t }) {
      const r = s.computed(() => B(e.target, d)), a = s.computed(() => S(e.landscape, e.portrait)), i = s.computed(() => V(e.dark, e.light)), u = s.computed(() => $(e.inert, e.motion)), g = s.computed(() => r.value.includes(c.current) && a.value.includes(c.orientation) && i.value.includes(c.theme) && u.value.includes(c.motionPreference)), y = (p) => {
        if (!e.group && t.length > 0)
          return t;
        const m = [];
        for (let v in t) {
          const { slotBp: D, slotOrientation: q, slotTheme: T, slotMotion: x } = me(v), z = s.computed(() => B(D, d)), K = s.computed(() => S(q === "landscape", q === "portrait")), Q = s.computed(() => V(T === "dark", T === "light")), N = s.computed(() => $(x === "inert", x === "motion"));
          s.computed(() => z.value.includes(c.current) && K.value.includes(c.orientation) && Q.value.includes(c.theme) && N.value.includes(c.motionPreference)).value === true && m.push(s.h(p || t[v], { key: v }, p ? t[v]() : void 0));
        }
        return m.length > 0 ? m : void 0;
      };
      return t.default ? () => g.value ? s.h(e.tag, { ...n }, t.default()) : void 0 : () => {
        const p = Object.assign({}, ve, n, { tag: e.tag }), m = e.group ? s.TransitionGroup : s.Transition;
        return s.h(m, p, () => y(e.listTag));
      };
    } };
    function w({ breakpoints: e, preset: n }) {
      const o = n ? ce(n) : false, t = e ? R(e) : false;
      if (o === false && !t)
        throw new TypeError("Vue3 Mq: You must provide a valid preset, or valid breakpoint settings.");
      J(t || R(o)), te(), ee();
      const r = ne();
      for (const a in r) {
        const i = r[a];
        h(i, () => {
          _(a);
        });
      }
      ["portrait", "landscape"].forEach((a) => {
        const i = () => {
          j(a);
        };
        h(`(orientation: ${a})`, i);
      }), ["light", "dark"].forEach((a) => {
        const i = () => {
          P(a);
        };
        h(`(prefers-color-scheme: ${a})`, i);
      }), ["reduce", "no-preference"].forEach((a) => {
        const i = () => {
          A(a);
        };
        h(`(prefers-reduced-motion: ${a})`, i);
      });
    }
    function ge() {
      const e = s.inject("mq");
      if (e)
        return e;
      throw new Error("Vue3Mq is not installed in this app. Please follow the installation instructions and try again.");
    }
    var ye = (e, { preset: n = "bootstrap5", breakpoints: o, defaultBreakpoint: t, defaultOrientation: r = "landscape", defaultMotion: a = "no-preference", defaultTheme: i } = {}) => {
      try {
        const u = de(r), g = fe(i), y = pe(a);
        H(t), U(u), W(g), X(y), e.provide("mq", c), e.provide("updateBreakpoints", w), w({ breakpoints: o, preset: n });
      } catch (u) {
        console.error(u);
      }
    };
    var ke = { install: ye };
    exports.MqResponsive = he;
    exports.Vue3Mq = ke;
    exports.availableBreakpoints = d;
    exports.updateBreakpoints = w;
    exports.useMq = ge;
  }
});
export default require_vue3_mq();
//# sourceMappingURL=vue3-mq.js.map
